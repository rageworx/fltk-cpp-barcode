# Makefile for fltk-barcode-gen, macOS llvm + Homebrew
# ----------------------------------------------------------------------
# Written by Raph.K.
#

GCC = llvm-gcc
GPP = llvm-g++
AR  = llvm-ar
FCG = fltk-config --use-images

# FLTK configs 
FLTKCFG_CXX := $(shell ${FCG} --cxxflags)
FLTKCFG_LFG := $(shell ${FCG} --ldflags)

include macOS.config

# Base PATH
BASE_PATH = .
SRC_PATH  = $(BASE_PATH)/src

# TARGET settings
TARGET_PKG =  fltkbarcodegen
TARGET_DIR = ./bin
TARGET_OBJ = ./obj
TARGET_MAC = ${TARGET_PKG}.app
TARGET_MAC_CONTENT = ${TARGET_DIR}/${TARGET_MAC}/Contents/MacOS

# Compiler optiops 
COPTS += -std=c++11
COPTS += -mmacosx-version-min=11.0
#COPTS += -arch arm64 -arch x86_64
COPTS += -Os
#COPTS += -fopenmp -fomit-frame-pointer 
#COPTS += -DDEBUG

# Where is fl_imgtk?
FLIMGTK_DIR = ../fl_imgtk/lib

# Where is FLFTRender ?
FLFTRNDR_DIR = ../FLFTRender/src
FLFTRNDR_SRC = $(FLFTRNDR_DIR)/FLFTRender.cpp
FLFTRNDR_OBJ = $(TARGET_OBJ)/FLFTRender/FLFTRender.o

# CC FLAGS
CFLAGS  = -I$(SRC_PATH)
CFLAGS += -Ires
CFLAGS += -I$(FLIMGTK_DIR)
CFLAGS += -I$(FLFTRNDR_DIR)
CFLAGS += $(FT2_CFLAGS)
CFLAGS += $(FLTKCFG_CXX)
CFLAGS += $(DEFS)
CFLAGS += $(COPTS)

# Windows Resource Flags
WFLGAS  = $(CFLAGS)

# LINK FLAG
LFLAGS += -L$(FLIMGTK_DIR)
LFLAGS += -lfl_imgtk
LFLAGS += $(FLTKCFG_LFG)
LFLAGS += $(FT2_LFLAGS)

# Sources
SRCS = $(wildcard $(SRC_PATH)/*.cpp)

# Windows resource
WRES = res/resource.rc

# Make object targets from SRCS.
OBJS = $(SRCS:$(SRC_PATH)/%.cpp=$(TARGET_OBJ)/%.o)
WROBJ = $(TARGET_OBJ)/resource.o

.PHONY: prepare clean

all: prepare continue

continue: $(TARGET_DIR)/$(TARGET_PKG)

prepare:
	@mkdir -p $(TARGET_DIR)
	@mkdir -p $(TARGET_OBJ)
	@mkdir -p $(TARGET_OBJ)/FLFTRender

clean:
	@echo "Cleaning built targets ..."
	@rm -rf $(TARGET_DIR)/$(TARGET_PKG).*
	@rm -rf $(TARGET_INC)/*.h
	@rm -rf $(TARGET_OBJ)/*.o
	@rm -rf $(FLFTRNDR_OBJ)

$(OBJS): $(TARGET_OBJ)/%.o: $(SRC_PATH)/%.cpp
	@echo "Building $@ ... "
	@$(GPP) $(CFLAGS) -c $< -o $@

$(FLFTRNDR_OBJ): $(FLFTRNDR_SRC)
	@echo "Building $@ ... "
	@$(GPP) $(CFLAGS) -c $< -o $@

$(TARGET_DIR)/$(TARGET_PKG): $(OBJS) $(FLFTRNDR_OBJ)
	@echo "Generating $@ ..."
	@$(GPP) $^ $(CFLAGS) $(LFLAGS) -o $@
	@echo "done."

packaging: ${TARGET_DIR}/${TARGET_PKG}
	@cp -rf res/macOS.app.ref ${TARGET_DIR}/${TARGET_MAC}
	@mkdir -p ${TARGET_MAC_CONTENT}
	@cp -f ${TARGET_DIR}/${TARGET_PKG} ${TARGET_MAC_CONTENT}
	@./automacverapply.sh ${TARGET_MAC}
